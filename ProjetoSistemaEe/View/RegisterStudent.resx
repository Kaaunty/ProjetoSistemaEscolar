<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKCgAAAEAIABoGgAAFgAAACgAAAAoAAAAUAAAAAEAIAAAAAAAABkAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFwAKFV8ALKFfACyqRQAgK18AKz8vABYbXwAsfS8AFjlfASyDMAAWTC8A
        FQpgACy6FwAKETAAFTBgAS2oXwAsW0gAEgNgACyaXwAqZV8ALFZdAChLXwAtr0YAIDZfAC1iXwAsSAAA
        AABfACygYwAnLgAAAAAvABUkYAEskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFsA
        KGdfACyoRgAggl8ALIdgACtRRwAgKV8ALeswABZJXwAtpzAAFmEuABUZXwAt7i8AFl8wABY9YAEuqgAA
        AAAgAAACYAAtxV8ALNBbACs/LgAUEEcAIXtfAC2MYAAtfV8ALVwAAAAAXwAtzV8AJjsAAAAAMAAVL18B
        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
        Of9uBzn/bgc5/24HOf9uBzn/bgc59GEDKCVuBjnFbgc5/24HOf9uBzn/bgc5/24HOf9uBzn/bgc5/24H
        Of9uBzn/bgc5/24HOf9uBzn/bgc5/24HOf9sBTa0KwENBwAAAAAAAAAAAAAAAAAAAAAAAAAAHAEOBXEI
        O8NxCDv/cQg7/3EIO/9xCDv/cQg7/3EIO/9xCDqscQg783EIO/9xCDv/cQg7/3EIO/9xCDv/cQg7/3AF
        LKdSBCZUcQg7/nEIO/9xCDv/cQg7/3EIO/9xCDv/cQg7/3EIO/9xCDv/cQg7/3EIO/9xCDv/cQg7/3EI
        O/9xCDv/cQg7/nEIOW4dAg4AAAAAAAAAAAAAAAAAAAAAAAAAAABWBixKcgo9/nMKPf9zCj3/cwo9/3MK
        Pf9zCj3/cwo9/3MKPf9zCj3/cwo9/3MKPf9zCj3/cwo9/3MKPf1rBiowcwk8y3MKPf5zCj3+cwo9/nMK
        Pf5zCj3+cwo9/3MKPf9zCj3/cwo9/3MKPf9zCj3/cwo9/3MKPf9zCj3/cwo9/3MKPf9zCTzhOQQcBgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHUKPrt1Cj//dQo//3UKP/91Cj//dQo//3UKP/91Cj//dQo//3UK
        P/91Cj//dQo//3UKP/91CT6iOgMdCzoEHkc6BR1BOgUdODoEHS46BR0sOgUeQDoFHmp0BzyCdQo+13UK
        P/51Cj//dQo//3UKP/91Cj//dQo//3UKP/91Cj//dQo//lgJLVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABZCC8/dwxB+ncMQf93DEH/dwxB/3cMQf93DEH/dwxB/3cMQf93DEH/dwxB/3cMQf93C0H9WAYuOQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0CDwt2CzyJdwtB/ncMQf93DEH/dwxB/3cM
        Qf93DEH/dwxB/3cMQf93DECtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHgIPA3gMQrp5DEP/eQxD/3kM
        Q/95DEP/eQxD/3kMQ/95DEP/eQxD/3kMQ/95DEP/eAxBswAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAHAINAngMQal5DEP/eQxD/3kMQ/95DEP/eQxD/3kMQ/95DEP/eQxC2zwG
        HgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9BiEyeg1E+XoNRf96DUX/eg1F/3oNRf96DUX/eg1F/3oN
        Rf96DUX/egxF+j0GIjcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA9BiEceQxE8XoNRf96DUX/eg1F/3oNRf96DUX/eg1F/3oMRO09BiELAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHgMQAXsMRap7DEb/ewxG/3sMRv97DEb/ewxG/3sMRv97DEb/ewxG/3sMRcEdAxADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHgIQAXsMRbl7DEb/ewxG/3sM
        Rv97DEb/ewxG/3sMRv97DEb3PQYiEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcCDMzew1H/nwN
        R/98DUf/fA1H/3wNR/98DUf/fA1H/3wNR/5dBixEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB7DESFfA1H/3wNR/98DUf/fA1H/3wNR/98DUf/fA1H/D4H
        IxQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXQk1O3wNSv58Dkr/fA5K/3wOSv98Dkr/fA5K/3wO
        Sv98DUn7HwMSEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAfAg3dHwOSv98Dkr/fA5K/3wOSv98Dkr/fA5K/3wOSfw+ByQUAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHwMSAX0NSq99Dkv/fQ5L/30OS/99Dkv/fQ5L/30OS/99Dkv/fQ5L/14JN5EVAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAJAH0NSqF9Dkv/fQ5L/30O
        S/99Dkv/fQ5L/30OS/99Dkv5PgYlEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8GJTl+Dk37fg5N/34O
        Tf9+Dk3/fg5N/34OTf9+Dk3/fg5N/34OTf9+DUzsPwYlGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8GJRV+DUzmfg5N/34OTf9+Dk3/fg5N/34OTf9+Dk3/fg5N7z8G
        JQwAAAAAAAAAAAAAAAAAAAAAAAAAAB4DEwR+DU29fg1P/34NT/9+DU//fg1P/34NT/9+DU//fg1P/34N
        T/9+DU//fg1P/38JRIsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8D
        Ewt/DE6sfg1P/34NT/9+DU//fg1P/34NT/9+DU//fg1P/34NTtw/BSMDAAAAAAAAAAAAAAAAAAAAAAAA
        AABfCTpDgAxQ+4AMUP+ADFD/gAxQ/4AMUP+ADFD/gAxQ/4AMUP+ADFD/gAxQ/4AMUP9/DFD5XwM3JAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPgQmAj8GKCZ/C1C9gAxQ/oAMUP+ADFD/gAxQ/4AM
        UP+ADFD/fwxQ/38MUP9/DE+oAAAAAAAAAAAAAAAAAAAAAAAAAAAVAAAAfwxRwYANUv+ADVL/gA1S/4AN
        Uv+ADVL/gA1S/4ANUv+ADVL/gA1S/4ANUv+ADVL/gA1S/38MUZFcBjQEfwxRcH4NUYR/DFGFgAxRi38M
        UpZ/DFKkfwxSrn8MU8N/DFL3gA1S/4ANUv+ADVL/gA1S/4ANUv+ADVL/fwxS/38MUv+ADVL+WwY5QQAA
        AAAAAAAAAAAAAAAAAAAAAAAAgAhOT4AMVP6ADFT/gAxU/4AMVP+ADFT/gAxU/4AMVP+ADFT/gAxU/4AM
        VP+ADFT/gAxU/4AMVP+ADFT5QAUoIH8MUZqADFT/gAxU/4AMVP+ADFT/gAxU/4AMVP+ADFT/gAxU/4AM
        VP+ADFT/gAxU/4AMVP+ADFT/gAxU/38MVP9/DFT/gA1TvkAGJwEAAAAAAAAAAAAAAAAAAAAARAInBoAL
        VcaBC1X/gQtV/4ELVf+BC1X/gQtV/4ELVf+BC1X2gAtUxoELVf+BC1X/gQtV/4ELVf+BC1X/gQtV/4AL
        U6hABSgegAtV+oELVf+BC1X/gQtV/4ELVf+BC1X/gQtV/4ELVf+BC1X/gQtV/4ELVf+BC1X/gQtV/4EL
        Vf+BC1X/gAtV918JPTcAAAAAAAAAAAAAAAAAAAAAAAAAAGAFPk6BC1j9gQtY/4ELWP+BC1j/gQtY/4EL
        WP+BC1j/gQxVqV8FPzOBC1j+gQtY/4ELWP+BC1j/gQtY/4ELWP+BC1j1XwZALIALVqWBC1j/gQtY/4EL
        WP+BC1j/gQtY/4ELWP+BC1j/gQtY/4ELWP+BC1j/gQtY/4ELWP+BC1j/gAtX+YAIT1sAAAAAAAAAAAAA
        AAAAAAAAAAAAAEMCJgmACljTgQpY/4EKWP+BClj/gQpY/4EKWP+BClj/gQpY90AEKysAAAAAgApXwYEK
        WP+BClj/gQpY/4EKWP+BClj/gQpY/4AJV6l+BkE8gApY+4EKWP+BClj/gQpY/4EKWP+BClj/gQpY/4EK
        WP+BClj/gQpY/4EKWP+BClj/gApY8oAHUWciABEAAAAAAAAAAAAAAAAAAAAAAAAAAACADFRdgAta/oAL
        Wv+AC1r/gAta/4ALWv+AC1r/gAta/4AKWaAgAxUAAAAAAIAKVluAC1r+gAta/4ALWv+AC1r/gAta/4AL
        Wv+AClr+fwhUOIAKWcuAC1r/gAta/4ALWv+AC1r/gAta/4ALWv+AC1r/gAta/4ALWv+AC1r9gQpZzmAF
        PzQgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABUDgglb1YIJW/+CCVv/gglb/4IJW/+CCVv/gglb/4IJ
        W/xiCEEtAAAAAAAAAAA+AysSgglb7YIJW/+CCVv/gglb/4IJW/+CCVv/gglb/4EJW6p+BlJLgglb/oIJ
        W/+CCVv/gglb/4IJW/+CCVv/gglb/4IJW/2BCVq9gQlZVSACFQkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgQpYWYIJXOuCClztggpc74EJXPGCClzzggpc9oIKXPiDCVieAAAAAAAAAAAAAAAAAAAAAH8H
        V5CCCVz5ggpc+IEKXPaCClz1ggpc9IEJXPKBCVzvfghZO4EJW8SCClzkgglc24EJXM2CCVy5gQlblH0G
        Vmc/BCsiFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEFLQJBBS4EQQUtBUAF
        LgVABC4FQAUuBUAFLgVABS4GQAUtAgAAAAAAAAAAAAAAAAAAAAAgAhYCQAQuBkEFLgZABS4FQAQuBUEE
        LgVABC4FQAQuBTUCLAJABC0DQQQtBEAELQNABC0CRwIiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//////8AAAD//////wAAAP//
        ////AAAA8AAABJ8AAADwABAEnwAAAPAAEASfAAAA8AAABI8AAADwABAEDwAAAPAAAAAPAAAA8HFBqC8A
        AACAPAAH/wAAAIA4AAB/AAAAgBgAAB8AAADAGAAADwAAAMAAAAAHAAAA4AAAAAMAAADgAAAAAwAAAPAA
        AAABAAAA+AAAAAEAAAD4AB/wAQAAAPgAP/gAAAAA/AA//AAAAAD8AD/8AAAAAP4Af/4AAAAA/gB//gAA
        AAD8AH/+AAAAAPwAP/wAAAAA+AA/+AAAAAD4AB/gAQAAAPgAAAABAAAA8AAAAAEAAADgAAAAAwAAAOAA
        AAAHAAAAwAgAAA8AAADAGAAAHwAAAIAYAAA/AAAAgDwAAf8AAACAPAAf/wAAAP//////AAAA//////8A
        AAA=
</value>
  </data>
</root>